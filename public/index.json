[{"body":"","link":"https://curiouscyrus.me/","section":"","tags":null,"title":""},{"body":"","link":"https://curiouscyrus.me/post/","section":"post","tags":null,"title":""},{"body":"","link":"https://curiouscyrus.me/tags/blogging/","section":"tags","tags":null,"title":"blogging"},{"body":"\rIntroduction: Creating a dedicated test and development environment for in-development sensors and systems is crucial to avoid risks to your larger ecosystem when adding new features or testing changes. In this blog post, I'll take you through the step-by-step process of constructing a small 12 x 12 Paludarium with a spray-bar for effective testing and development.\nAcquiring the Materials Here are the main materials I used when constructing this simple background\nTwo cans of Great Stuff Spray Foam Egg crate Fine mesh netting 12 in x 12 in Acrylic Cube Substrate blend (coco fiber, bark, worm castings, sphagnum moss) Aquarium Silicone adhesive Electric pump Small river pebbles Sand \u0026quot;Fallen tree branch\u0026quot; element Assembling the Structure I used plastic egg-crate in order to create the skeleton platform that I would later cover in spray foam. I constructed a false-bottom, which is essentially a platform with sufficient drainage so that soil does not become over-saturated.\nThis step also allows you to plan a little bit more how you would like everything to turn out and add some real foundation as well. I also implemented a sectioned off corner which the pump will eventually sit in.\nTesting the Fitment and Wrapping Once I made my initial structure, I placed it in the Acrylic cube and applied cling wrap to the bottom and sides. This allows us to remove the Sprayed-On resulting background without having it adhere or bind to the cube itself.\nAdding Mesh Next, I added fine mesh in order to prevent small debris from being sucked in to the area where the pump would sit, acting like a filter. I \u0026quot;tack welded\u0026quot; the mesh with hot glue, which worked alright but I definitely would not recommend, or do again myself. I also tested how the simple branch element would sit at this point!\nSpray Foam It Up The process of applying the spray foam was kind of fun, but also smelled fairly awful. I recommend doing this in a well-ventilated area to both speed up curing and avoid smells.\nIn terms of technique and application, I mainly attempted to just evenly foam the entire frame and ensure it was covered. With the amount that the foam expands, even the small sized structure I made was now nearly covering the entire box.\nI also ensured to keep an area un-sprayed which would allow me to route the water pump's tubing to the top of the feature.\nYou may notice some of the background already applied in this image. This is because the image was taken after the background was already cured, cut, and had silicone applied. Those steps are described next!\nCuring Once I finished the second spray can and deemed the job appropriate, I waited about two hours before pulling the background out of the cube along with the cling wrap.\nIn terms of speed, removing the wrapping also exposes the sides which will allow the overall background to dry out faster. It took about two days for it to fully cure! I did not add skewers for ventilation, but I read afterwards that may adding holes may assist in curing parts of the foam which may still be fairly wet, as the inside is not exposed to air regularly.\nCut the Background One of the more tedious and annoying parts is to cut your cured foamy background in order to expose the rough and porous surface of the foam.\nAccording to others online, if you simply apply silicone adhesive to the regularly smooth surface of the foam, it does not adhere as well and also causes problems with adhering the substrate background to the foam as well.\nThat being said, it took multiple hours and a significant amount of leftover foam bits had to be cleaned up while trimming the background. In effect, this may also make it look more rocky or craggly!\nApply Black Aquarium Silicone This step is one of the more time-sensitive steps, and involves smearing a thick enough layer of silicone across the background, upon which I placed the substrate mixture. Unfortunately I forgot to take a picture of the covered background before applying the substrate, so I have instead added a picture of another Vivarium that used this same technique.\nIn the future, I intend on using Hygrolon, a mesh that wicks water very effectively, and will instead affix it to the spray-foam surface, though I wanted to try out this novel method first! Once I applied an excess amount of substrate to the background, I waited an additional 5-6 hours for it to cure before shaking the background of any excess substrate.\nFinishing Landscape Touches One of the last steps in the initial construction was to add a small rocky basin as well as some sand to split up the environment more. I also covered the main platform with substrate at this point.\nUnfortunately, I realized after that some of my egg crate is exposed and I am not entirely sure how to fix it at this point. In the future I will likely spray-foam the platform itself as well, to create a small barrier between the water and the false-bottom.\nTest the Pump and Filtration Tomorrow I will most likely add water to this new tiny and physical Dev Environment! I'm excited to continue, though I'm certain there will be some issues along the way!\nOnce the water is running correctly, I can introduce some plant-life, namely some Java moss and a few other goodies, then developing and testing early Embedded systems will begin!\n","link":"https://curiouscyrus.me/post/paludariumdevenvironment/","section":"post","tags":["LEAP","construction","blogging"],"title":"Constructing the Test and Development Environment"},{"body":"","link":"https://curiouscyrus.me/tags/construction/","section":"tags","tags":null,"title":"construction"},{"body":"","link":"https://curiouscyrus.me/tags/leap/","section":"tags","tags":null,"title":"LEAP"},{"body":"","link":"https://curiouscyrus.me/tags/","section":"tags","tags":null,"title":"Tags"},{"body":"What does Early Systems Diagramming look like?: In the realm of technology and software + hardware development, this process involves creating the initial diagrams for the main system and its encompassed subsystems! These diagrams have been created from my earlier post involving the Brainstorming of LEAP\nFurther, I'd like to also delve into the significance of this phase and explore the facets involved in developing this evolving blueprint that will guide the rest of the development journey.\nTip\rThe Embedded Diagrams.NET can be zoomed in significantly to view any of the subsystems such as the Remote Management or Main Arbiter and Data-Link System!\nMoving from the Foundation to the Architecture When embarking on a new project, the first step is to conceptualize the main system. This involves outlining the core functionalities, identifying key components, and establishing the overall architecture.\nThis main system diagram acts as a roadmap, providing a visual representation of how different elements will interact and function together.\nConsiderations for Integration: In this early design stage, some consideration is given to how different subsystems should integrate into the main system. Power requirements, Compatibility, Data flow, and Communication protocols are defined to an extent. The aim here is to create the start of a well-coordinated system that will make logical sense!\nIterative Refinement It's important to also recognize that the initial design is a starting point rather than a conclusion. Iteratively improving and adjusting the diagram ensures the design will remain flexible with the project's evolving goals and requirements. Additionally, at this level there is still a level of abstraction and vagueness with respect to exactly how certain parts will function together that will get defined further as I work through milestones.\nConclusion Architecting and Diagramming is a pivotal phase in any project's lifecycle. It lays the groundwork for the entire development process, providing a clear path for implementation. In navigating through the process of creating diagrams for the main system and its encompassed subsystems, I am intending to set the stage for a successful and well-orchestrated project. In the realm of design, these early systems are the blueprints that ideas into reality!\n","link":"https://curiouscyrus.me/post/earlysystemsdesign/","section":"post","tags":["LEAP","diagramming","system design","blogging"],"title":"Designing LEAP's Early Systems Architecture"},{"body":"","link":"https://curiouscyrus.me/tags/diagramming/","section":"tags","tags":null,"title":"diagramming"},{"body":"","link":"https://curiouscyrus.me/tags/system-design/","section":"tags","tags":null,"title":"system design"},{"body":"","link":"https://curiouscyrus.me/tags/brainstorming/","section":"tags","tags":null,"title":"brainstorming"},{"body":"\rIntro - Defining Components of LEAP: This post details the process I went through while working on the initial planning of the Paludarium, to organize and sort the possible scope of the Living Ecosystem Automation Project.\nThis was one of the first times I used a Mind map, but I found it to help sort some ideas I had previously written down, but did not have collected in any meaningful matter to share. In working on this Mind Map, I was able to more clearly compartmentalize different sections of this overall large project, and visualize it in a way that makes sense - at least, to me!\nEight Main Components Starting from the center of the Map, there are eight branches that I considered essential to the goals of the project.\nRemote Management - This covers convenient methods of interfacing with the system, as well as addressing individual subcomponents through queries, or application based management. Ecosystem Health Monitoring - Peripherals such as temperature or humidity sensors Terrestrial Management - Food and Water control for land-bound Flora and Fauna Aquatic Management - Food and Water Control for immersed life. Physical Features - How the actual Paludarium will look and the types of geographical features. This is less related to the Technological side of LEAP, but is a key component to having a realistic and beautiful environment. Custom Hardware, Physical Interfaces - This covers some of the more \u0026quot;completing\u0026quot; features beyond initial prototyping that I intend on including, such as custom PCB designs for microcontrollers, or hardware such as buttons. Ambient Features - This covers the \u0026quot;look and feel\u0026quot; of the Paludarium, bringing it to life, and adding some style. Photoperiodism - Lastly, another mandatory requirement for LEAP is to have proper lighting that covers the PAR (photosynthetic active radition) region of wavelengths and scheduling the lighting itself is paramount to thriving life. About Each Component Remote Management What modern embedded system wouldn't be complete without an abundance of networking features and cross communication between different platforms? Automating in a modern way means being able to remotely access important features and options to control the system.\nPlus, being able to share is important too! One longer term goal is to allow friends to visit a live stream of the Paludarium, and perhaps have an option to \u0026quot;Feed the Reptile\u0026quot; or cause a Thunderstorm for example.\nEcosystem Health Monitoring Most of the sensors are organized within this Monitoring section. At a high level, these system inputs will be used to help determine additional adjustments that may be needed in order to ensure the health of life within.\nFor example, a low humidity may indicate that the system requires additional misting or waterflow to be delivered.\nUltimately, most of the monitoring of may be contained to one embedded controller, which then reports to the main system which then issues commands to an appropriate output controller, such as the misting system.\nTerrestrial Management Automatically providing sustenance for plants and animals will be handled through Auto Feeding and Auto Watering components. Irrigation wise, both a pumped misting system as well as a \u0026quot;Spray Bar\u0026quot; or \u0026quot;Drip Wall\u0026quot; will be implemented, providing moisture on the Paludarium background that plant life will enjoy.\nI also want to include a Waterfall feature which can have its flow diverted via a servo, which could also reveal a hidden cave. This part is more of a \u0026quot;fun feature\u0026quot; 🙂\nAquatic Management In regards to aquatic life, such as immersed plants and fish, we must also ensure that the water quality is appropriate, and also have a method of dispensing food into the Water medium, instead of above land.\nPhysical Features Some of the more non-technical adventures on this blog will cover the creation of the physical features of the Paludarium.\nBetween using Spray Foam to create a natural wall and painting it with Substrate, carving the flow of a small stream, or adding a sandy Zen Garden, I intend on adding some artistic and creative elements.\nI'm excited but also fairly anxious of this part of LEAP since I'll actually be a little more clueless on this sort of landscape creation and design!\nI anticipate that I will likely go through multiple revisions for some of these elements as I get more practice 🙃\nCustom Hardware, Physical Interfaces With some of my background in 3D Modeling and 3D-Printing, I intend on rapid-prototyping custom solutions to house and protect the hardware.\nEventually, implementing PCBs designed specifically for each subsystem will be an end goal. Physically integrating a capacitive touch panel as well as a rotary knob will also allow users to check the system at a glance, or perform simple operations.\nAmbient Features Inspired by another maker who has been working on a nearly decade-long project of Automating his own Paludariums at https://paluweb.nl/ , I thought it would be awesome to be able to scrape web-data of the weather conditions in a particular area, then emulate those at my home.\nIn other words, if Seattle had a drizzle all-day with a humidity of 70% and temperature of 68 degrees fahrenheit, then my home Paludarium would be automatically controlled to match this.\nPhotoperiodism Lighting systems provide both the required energy for plants to thrive, while also raising the ambient temperature of the Paludarium.\nEver go to an aquarium and see an exhibit which undergoes an adverse weather event? Having a FLASH of lightning, followed with subsequent delayed thunder from the Ambient Features, this would be a cherry on top as a part of the \u0026quot;feeling\u0026quot; of LEAP.\nPutting it All Together - Full Mind Map And.. here's the entire Mind Map once complete! When viewed at this level, it's a fairly complete overview of the components of LEAP and what I intend on implementing.\nThis does not, however, detail the priority, timelining, or other important considerations regarding the project. More than anything, this is a high level view to help break things down.\n","link":"https://curiouscyrus.me/post/brainstorming/","section":"post","tags":["brainstorming","LEAP","blogging"],"title":"Brainstorming LEAP's Features"},{"body":"","link":"https://curiouscyrus.me/tags/analytics/","section":"tags","tags":null,"title":"Analytics"},{"body":"","link":"https://curiouscyrus.me/tags/azure/","section":"tags","tags":null,"title":"Azure"},{"body":"","link":"https://curiouscyrus.me/tags/cloud/","section":"tags","tags":null,"title":"Cloud"},{"body":"","link":"https://curiouscyrus.me/tags/dns/","section":"tags","tags":null,"title":"DNS"},{"body":"\rInfo:\rThis post details the process I went through while working on this Blog website and ultimately hosting it here at https://curiouscyrus.me/\nFor more information on why this blog exists, and the content on it, see What is LEAP? You can also find the accompanying public repository for my Web app here as well!\nDeciding on the Type of Website One of the first steps on my Website creation adventure was to determine the type of website that would be suited for my specific application. For this Website, I wanted a blog-style interface which would allow sufficient customization with site organization while also keeping things simple in terms of adding new content to the Website\nIn this case, I also have no need to store any user data or perform complicated operations that would require real time updates, and the priority is to provide a quick and snappy experience. Therefore, the most appropriate type of website was a Static Website. The next steps were to determine a Website Framework to use, or whether to start from scratch!\nWebsite Frameworks - Hugo Hugo allows you to write pages for websites with Markdown, which was a major factor in why I decided to go with it. Partly, my goal for this Website and Domain is to display educational posts - therefore, being able to easily add posts in a simple formatting is ideal! Having worked with LaTeX in courses previously.. and not being a huge fan, Markdown is a nice switch!\nI also figured with the widespread applicability of Markdown as a practical documentation method, I oughta' get some practice 😉\nInstalling Hugo Working with Hugo is fairly straightforward, though, when it comes down to customizing your website - there are a few nuances based on your Theming choices.. more on this later! For my Windows system, I used Chocolatey and while running an admin powershell, install simply required\n1 choco install hugo Theming.. and Re-Theming... The Hugo tutorial uses the Ananke theme, which I initially worked with while evaluating the feasibility of Hugo itself, and whether I was going to continue to run with it when making this Website!\nBefore looking at hosting the Static Website I made in a few minutes with Hugo, I ran the local instance via\n1 hugo server I customized a few elements on the default theme, such as the background color, experimented with adding a post or two, and looked at some of the options you can customize via the built in hugo.toml files.\nAfter evaluating that Hugo seemed sufficient while visiting some friends in WA, I commited the initial repository to save my work and then visit a few days later when I would be back in Colorado. In the mean time, I was interested in looking at some of the public options on the themes subpage of Hugo and found Clarity which caught my eye much more.\nOne major thing to note about themes in Hugo though, is that each Theme has its own subset of parameters and conventions which influence how the HTML and CSS is built and then subsequently displayed. In switching to Clarity, I did have to essentially re-orient myself with the Framework. In the case of Clarity, one unique feature is that the regular hugo.toml file that I mentioned earlier, is actually unused. Instead, it has been re-implemented as a set of .toml files within the \\config_default folder.\nI find this method to provide greater customization, and also found it to be fairly intuitive, for example you can see the Header menu bar being configured below in the .toml for the menu.\n1[[main]] 2 name = \u0026#34;Home\u0026#34; 3 url = \u0026#34;\u0026#34; 4 weight = -110 5 6[[main]] 7 name = \u0026#34;Videos\u0026#34; 8 url = \u0026#34;post/rich-content/\u0026#34; 9 weight = -105 10[[main]] 11 name = \u0026#34;What is LEAP?\u0026#34; 12 url = \u0026#34;post/starting-a-project/\u0026#34; 13 weight = -107 Technically, this is the menu in English, since Clarity provides support for language switching. Sadly, I'm not a polyglot, and my French is a bit rusty so I am not using this feature 😅\nThere are plenty more customizations I made to adapt the base Clarity theme to my goals and intents, including adding a CSS override file to change the background colors when building the site, which is output to the public/ folder. See that here\nChoosing a Hosting Method - Microsoft Azure: Cloud Computing Next, to actually get the Website to be Live, we need a method of hosting. I decided to go with Azure, as I have some experience with Microsoft's Cloud hosting service, and they also offer free subscription plans for lighter workloads and non-business use - perfectly appropriate for this application!\nAzure offers a significant amount of resource creation options, including one to create a Static Web App.\nGithub Workflow and CI/CD When setting up the Static Web App, there are options to link a Github account and enable link the repository for your static web app to. In addition to that, there is also a Build Preset Option that allows you to select a premade workflow for Hugo. Once this is done, any updates to the main branch of the repository will result in Github running a workflow and upon succesful completion, the website is automatically redeployed through Azure.\nMore info on the Build Configuration here For me, this simplifies updating the live site versus making edits to my local page, and allows me to more quickly and rapidly make changes, such as adding new posts, updating page elements, and beyond.\nThe entire process is a matter of checking in any new or changed files, adding a commit message, pushing through git, then waiting a few minutes! Here's what it all looks like\n1 git add . 2 git commit -m \u0026#34;Added Trials and Tribulations of Web Hosting post\u0026#34; 3 git push Then we hop over to github, wait for build completion, And now the site is up and hosted on my Domain! Well, actually, it's hosted on the Azure auto-generated URL, which I've re-pointed to the https://curiouscyrus.me domain that I purchased (on a yearly subscription) through squarespace and subsequently mapped. See how I did that next!\nPurchasing and Using a Domain I purchased my domain from squarespace here here. Once that was done, it was a matter of navigating to the Custom Domains tab in Azure, and following the steps to Setting this part of was actually fairly simple, and was a matter of waiting for the Validation to pass and a green check mark to pop up ✅ For more detailed info, check Microsoft's official resource\nGoogle Analytics and More One of the last things I wanted to implement early on with the Website was a method of tracking the Analytics and viewer statistics of the website. The Hugo Clarity theme supports this integration fairly easily within the params.toml once you have acquired your analytics ID. I had to create an Analytics account, add the https://curiouscyrus.me website, and followed a few more easy steps.\n1# Google analytics Id 2ga_analytics = \u0026#34;G-MY7YCM38VS\u0026#34; Once this was done, I was able to start collecting web traffic and viewing it. Below you can see the first bit of traffic, from myself! ","link":"https://curiouscyrus.me/post/trials-and-tribulations/","section":"post","tags":["Web-dev","Azure","Cloud","DNS","Analytics","blogging"],"title":"Trials and Tribulations of Website Hosting"},{"body":"","link":"https://curiouscyrus.me/tags/web-dev/","section":"tags","tags":null,"title":"web dev"},{"body":"\rDocumenting a New Project: Hey there, and welcome to the first blog post on Automation and Curiosities! I've created this Website as a way to share my continued progress, experiences (good or bad), and knowledge gained while working on Automating the World!\nWell, to be specific, the scope is actually the wonderful \u0026quot;World\u0026quot; of simulated ecosystems and environments!\nOne of my main goals with these types of posts and the content I create is to both provide knowledge to others, as well as show some of the problems I have run into, while cataloguing and providing visual supplements that aid in understanding!\n1I am a code block! 2This is the second line! 3Would \u0026#34;Hello World\u0026#34; have been better? Most posts will include a link to the source, hosted on a Git Repository from my account CyrusDS and may also reference code through the use of blocks, like so!\nSee What is LEAP? for more specific info on the Paludarium Automation Project!\nThank you (yes, you!) for taking the time to read through this intro, I'm very excited for your thoughts and suggestions! Feel free to comment on any blog post regarding anything at all!\n","link":"https://curiouscyrus.me/post/leaps/","section":"post","tags":["LEAP","blogging"],"title":"When an idea becomes a plan, then a plan becomes action"},{"body":"","link":"https://curiouscyrus.me/tags/videos/","section":"tags","tags":null,"title":"videos"},{"body":" YouTube Videos will be shown below as they are posted! ","link":"https://curiouscyrus.me/post/rich-content/","section":"post","tags":["videos","youtube"],"title":"Videos"},{"body":"\rSystems Design, Plants, and having Computers do things for you are three things I love! Why not have all at once?\r\\n\nBesides working in IT Systems Administration for my University while working towards my degree, I most recently worked with NVMe SSD Storage Systems, writing Embedded C Firmware on RTOS platforms, and making FPGA system design modifications using Xilinx Products.\nAt the moment, I'm looking toward new opportunities! Contact me at my email The first time I became captivated by computers while in the 7th grade attending a STEM Middle School, where I took an entry level programming course that also exposed me to the world of Microcontrollers! (in the form of Arduino, a simplified version of C++)\nBeing able to create a device that was equipped with a number of digital and analog sensors that could interact with the external world and then translate that to numbers which a computer could interpret was, AND still is incredible to me! Not to mention, also reprogrammable on-the-fly?!\nIn taking this course, I actually managed to get my first contracted work (20 whole hours!) designing and programming a DNA cycler which used a TEC (Thermo Electric Cooler). In essence, these two-sided heat pumps are able to cool one side of the device, while simultaneously heating the other. See the Peltier Effect for more! The DNA cycling system I worked on performed timed heating + cooling operations whose length and intensity depended upon a thermistor measuring temperature within the DNA chamber, and was implemented on an ATmega328P!\nOne key component of this interaction, is that without external factors (eg. fans) the heat will ultimately overtake the cooling! It is essential to balance this!\nI have also been a long-time advocate of 3D-Printing technologies and tinkerer, gaining a fair amount of experience with 3D CAD Software tools (Autodesk, Solidworks, Blender) which has helped me develop prototyping skills when bringing ideas to physical life! In my free time, I often volunteer for the FBLC to help in the mission of ending hunger for those facing food insecurity, as well as reducing food waste - something that is not talked about enough. To put some numbers from the EPA in perspective, the EPA estimates that in 2019, 66 million tons of wasted food was generated in the food retail, food service, and residential sectors, and most of this waste (about 60%) was sent to landfills Feeding people (for free) is one of the major ways to divert a lot of these foods while also aiding social causes. My local food bank saves about 93% of the food donated by organizations such as Whole Foods, Trader Joes, Sprouts, and others. I highly encourage anyone to get involved with a food rescue organization, as I've found it to be a fantastic way to make a difference in a community, while also contributing to a more sustainable world!\nBeyond this, I also love to spend time exploring in nature, as well as relaxing with my goofball of a pooch! Also, what ecosystem wouldn't be complete without a predator of some sort? My veiled chameleon, Dilbert, often enjoys preying on small critters such as crickets and waxworms.\nFeel free to contact me at my email ","link":"https://curiouscyrus.me/about/","section":"","tags":null,"title":"Who am I?"},{"body":"","link":"https://curiouscyrus.me/tags/youtube/","section":"tags","tags":null,"title":"youtube"},{"body":"\rSo, what exactly is this?? LEAP - Living Ecosystem Automation Project LEAP is a project I have been slowly building a plan together for since as early as 09/26/2023 when looking to incorporate water and land elements in a living ecosystem, after becoming inspired by some excellently designed enclosures that other hobbyists have designed in recent years.\nEventually, this morphed into something where I wanted to combine my skills and knowledge in Embedded Systems design with a goal of creating multiple subsystems run by specialized microcontrollers, which could vary between irrigation controls, livestreamed camera feed, humidity tracking, and much more.\nAdditionally, these subsystems would be designed such that they report to an underlying main processing system, running on a Real-Time OS, handling queries in a task oriented style. For this to be most convenient, such an automated system also needs to be able to interface to a network so that all data streams can be accessed in real time and so the system itself can respond to queries sent by an Administrator (That's me!)\nWhat the heck is a Paludarium? Terrariums, Vivariums, or Paludariums, are all semi or fully enclosed systems have a multitude of qualities which are essential to properly maintaining the health of the entire biome.\nCheck here to find out more about the differences between these three types of \u0026quot;ariums\u0026quot; Where does Automation come in? \\\nSee more of the System Diagram Here\nIn order to ensure ideal conditions that would allow the flora, fauna, as well as underlying micro-organisms to thrive, there is a significant value to automatically adjusting (our controlled) environment in response to measured biological indicators of health.\nMethods to determine this can vary from the precise monitoring and control of the enclosed system's humidity, temperature, soil and water pH, as well as many more crucially important aspects such as adaptable scheduling for lighting and water distribution.\n(See project index and breakdown for further information on the overall system design and sub-projects encompassing this entire automation task! Between CAD, PCB design, web dev, embedded RTOS, investigations into communication protocols, and MUCH more, there is a lot to check out!) Having such closely related but independently controlled sub-systems allows these components to be encapsulated within dedicated embedded systems that can then be controlled by an underlying master through a common communication protocol.\nOverview last updated - 01/10/2024 ","link":"https://curiouscyrus.me/post/starting-a-project/","section":"post","tags":["LEAP","blogging","web dev"],"title":"LEAP - A new initiative"},{"body":"","link":"https://curiouscyrus.me/archives/","section":"","tags":null,"title":""},{"body":"","link":"https://curiouscyrus.me/categories/","section":"categories","tags":null,"title":"Categories"},{"body":"","link":"https://curiouscyrus.me/series/","section":"series","tags":null,"title":"Series"}]